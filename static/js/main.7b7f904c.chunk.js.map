{"version":3,"sources":["components/Item/index.js","components/List/index.js","components/Navbar/index.js","App.js","reportWebVitals.js","index.js"],"names":["Item","props","src","img","title","List","useState","items","setItems","a","axios","get","getItems","data","results","console","log","useEffect","fetchData","filter","item","toLowerCase","includes","searchParam","map","key","thumbnail","id","Navbar","type","onChange","e","handleCallback","target","value","App","setSearchParam","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAceA,MAZf,SAAcC,GAIZ,OACE,qCACE,qBAAKC,IAAKD,EAAME,MAChB,4BAAIF,EAAMG,YCkCDC,MAvCf,SAAcJ,GAAQ,IAAD,EACOK,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,iDAOnB,4BAAAC,EAAA,4DAEI,8DAFJ,SAGyBC,IAAMC,IAD3B,+DAFJ,OAGQC,EAHR,OAKEJ,EAASI,EAASC,KAAKC,SAEvBC,QAAQC,IAAIJ,GAPd,4CAPmB,sBAgBnB,OAbAK,qBAAU,YAHS,mCAIjBC,KACC,IAYD,mCACGX,EACEY,QAAO,SAACC,GAIP,OAAOA,EAAKhB,MAAMiB,cAAcC,SAASrB,EAAMsB,gBAGhDC,KAAI,SAACJ,EAAMK,GACV,OACE,cAAC,EAAD,CACErB,MAAOgB,EAAKhB,MACZD,IAAKiB,EAAKM,WACLN,EAAKO,GAAKP,EAAKO,GAAKF,SCrBxBG,MAZf,SAAgB3B,GAKd,OACE,mCACE,uBAAO4B,KAAK,OAAOC,SANvB,SAAsBC,GACpB9B,EAAM+B,eAAeD,EAAEE,OAAOC,aCiBnBC,MAjBf,WAAgB,IAAD,EACyB7B,mBAAS,IADlC,mBACNiB,EADM,KACOa,EADP,KAQb,OACE,qCACE,6CACA,cAAC,EAAD,CAAQJ,eARZ,SAAsBT,GAEpBR,QAAQC,IAAIO,GACZa,EAAeb,MAMb,cAAC,EAAD,CAAMA,YAAaA,QCJVc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7b7f904c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Item(props) {\r\n  //const { title, img } = props;\r\n  //es una forma desestructurando,\r\n  //en vez de poner props.title, pones title solo\r\n  return (\r\n    <>\r\n      <img src={props.img} />\r\n      <p>{props.title}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Item from \"../Item\";\r\n\r\nfunction List(props) {\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  //llamando a la API con AXIOS\r\n  async function fetchData() {\r\n    const baseUrl =\r\n      \"https://api.mercadolibre.com/sites/MLA/search?q=auriculares\";\r\n    const getItems = await axios.get(baseUrl);\r\n\r\n    setItems(getItems.data.results);\r\n    //para probar si funciona\r\n    console.log(getItems);\r\n  }\r\n  return (\r\n    <>\r\n      {items\r\n        .filter((item) => {\r\n          //se va a fijar si el parametro a buscar esta incluido\r\n          //dentro de los titulos\r\n          //genera un nuevo array\r\n          return item.title.toLowerCase().includes(props.searchParam);\r\n        })\r\n        //hace un array con todo lo buscado\r\n        .map((item, key) => {\r\n          return (\r\n            <Item\r\n              title={item.title}\r\n              img={item.thumbnail}\r\n              key={item.id ? item.id : key}\r\n            />\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\r\n\r\nfunction Navbar(props) {\r\n  function handleChange(e) {\r\n    props.handleCallback(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <input type=\"text\" onChange={handleChange} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\nimport List from \"./components/List\";\nimport Navbar from \"./components/Navbar\";\n\nfunction App() {\n  const [searchParam, setSearchParam] = useState(\"\");\n  //nos devuelve el texto\n  function handleSearch(searchParam) {\n    //probando si funciona el callback\n    console.log(searchParam);\n    setSearchParam(searchParam);\n  }\n  return (\n    <>\n      <h1>Auriculares</h1>\n      <Navbar handleCallback={handleSearch} />\n      <List searchParam={searchParam} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}